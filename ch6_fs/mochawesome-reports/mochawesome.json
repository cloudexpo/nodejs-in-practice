{
  "reportTitle": "ch6_fs",
  "stats": {
    "suites": 3,
    "tests": 7,
    "passes": 6,
    "pending": 0,
    "failures": 1,
    "start": "2016-11-01T15:41:04.531Z",
    "end": "2016-11-01T15:41:09.681Z",
    "duration": 5151,
    "testsRegistered": 7,
    "passPercent": 85.7,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "mydatabase",
        "suites": [],
        "tests": [
          {
            "title": "load",
            "fullTitle": "mydatabase load",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> testdb1 = <span class=\"hljs-keyword\">new</span> db(<span class=\"hljs-string\">'./test.db'</span>);<br>    testdb1.on(<span class=\"hljs-string\">'load'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        should(testdb._records).be.a.Object;<br>        done();<br>    });",
            "isRoot": false,
            "uuid": "9af37e52-11e9-4278-9926-8997bd22e404",
            "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
            "skipped": false
          },
          {
            "title": "set",
            "fullTitle": "mydatabase set",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "testdb.set(<span class=\"hljs-number\">1</span>, { <span class=\"hljs-string\">'name'</span>: <span class=\"hljs-string\">'sunmeng1'</span>, <span class=\"hljs-string\">'age'</span>: <span class=\"hljs-number\">20</span>, birthday: <span class=\"hljs-string\">'2010-10-10'</span> }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    testdb._records[<span class=\"hljs-number\">1</span>].should.be.a.Object;<br>    done();<br>});<br><span class=\"hljs-comment\">//<span class=\"hljs-doctag\">TODO:</span> !!! how to call done directly with multiple async call=</span><br><span class=\"hljs-comment\">// testdb.set(2, { 'name': 'sunmeng2', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(3, { 'name': 'sunmeng3', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(4, { 'name': 'sunmeng4', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(5, { 'name': 'sunmeng5', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(6, { 'name': 'sunmeng6', 'age': 20, birthday: '2010-10-10' });</span>",
            "isRoot": false,
            "uuid": "614a41cf-db2a-4089-9b28-6274a1a1e034",
            "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
            "skipped": false
          },
          {
            "title": "delete",
            "fullTitle": "mydatabase delete",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "testdb.delete(<span class=\"hljs-number\">6</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    should(testdb._records[<span class=\"hljs-number\">6</span>]).be.null;<br>    done();<br>});",
            "isRoot": false,
            "uuid": "418776bf-50b5-4b61-86a1-d12ff2c00aba",
            "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\mydatabase.test.js",
        "uuid": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
        "fullFile": "C:\\Users\\meng_\\Documents\\GitHub\\nodejs\\ch6_fs\\test\\mydatabase.test.js",
        "passes": [
          {
            "title": "load",
            "fullTitle": "mydatabase load",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> testdb1 = <span class=\"hljs-keyword\">new</span> db(<span class=\"hljs-string\">'./test.db'</span>);<br>    testdb1.on(<span class=\"hljs-string\">'load'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        should(testdb._records).be.a.Object;<br>        done();<br>    });",
            "isRoot": false,
            "uuid": "9af37e52-11e9-4278-9926-8997bd22e404",
            "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
            "skipped": false
          },
          {
            "title": "set",
            "fullTitle": "mydatabase set",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "testdb.set(<span class=\"hljs-number\">1</span>, { <span class=\"hljs-string\">'name'</span>: <span class=\"hljs-string\">'sunmeng1'</span>, <span class=\"hljs-string\">'age'</span>: <span class=\"hljs-number\">20</span>, birthday: <span class=\"hljs-string\">'2010-10-10'</span> }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    testdb._records[<span class=\"hljs-number\">1</span>].should.be.a.Object;<br>    done();<br>});<br><span class=\"hljs-comment\">//<span class=\"hljs-doctag\">TODO:</span> !!! how to call done directly with multiple async call=</span><br><span class=\"hljs-comment\">// testdb.set(2, { 'name': 'sunmeng2', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(3, { 'name': 'sunmeng3', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(4, { 'name': 'sunmeng4', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(5, { 'name': 'sunmeng5', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(6, { 'name': 'sunmeng6', 'age': 20, birthday: '2010-10-10' });</span>",
            "isRoot": false,
            "uuid": "614a41cf-db2a-4089-9b28-6274a1a1e034",
            "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
            "skipped": false
          },
          {
            "title": "delete",
            "fullTitle": "mydatabase delete",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "testdb.delete(<span class=\"hljs-number\">6</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    should(testdb._records[<span class=\"hljs-number\">6</span>]).be.null;<br>    done();<br>});",
            "isRoot": false,
            "uuid": "418776bf-50b5-4b61-86a1-d12ff2c00aba",
            "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 8
      },
      {
        "title": "recursive finder",
        "suites": [],
        "tests": [
          {
            "title": "sync find",
            "fullTitle": "recursive finder sync find",
            "timedOut": false,
            "duration": 93,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// this.timeout(mochaTimeOut);</span><br><span class=\"hljs-keyword\">var</span> results = myfinder.findSync(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir);<br><span class=\"hljs-comment\">// console.log(results);</span><br>results.should.be.an.Array;<br>results.should.not.be.empty;<br>results.length.should.be.above(<span class=\"hljs-number\">0</span>);<br>results.should.containEql(<span class=\"hljs-string\">'index.js'</span>);<br><span class=\"hljs-comment\">// results.should.containEql('nindex.js');</span>",
            "isRoot": false,
            "uuid": "8076157d-1227-4cf6-ad15-dea11ab7c581",
            "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
            "skipped": false
          },
          {
            "title": "async find",
            "fullTitle": "recursive finder async find",
            "timedOut": true,
            "duration": 5003,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(mochaTimeOut);<br>myfinder.find(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, results</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) {<br>        <span class=\"hljs-keyword\">return</span> err;<br>    }<br>    results.should.be.an.Array;<br>    results.should.not.be.empty;<br>    done();<br>});",
            "err": {
              "name": "Error",
              "message": "timeout of 5000ms exceeded. Ensure the done() callback is being called in this test.",
              "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">5000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
            },
            "isRoot": false,
            "uuid": "c74be9e7-4491-474b-9b79-515909cd1f9e",
            "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\myfinder.test.js",
        "uuid": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
        "fullFile": "C:\\Users\\meng_\\Documents\\GitHub\\nodejs\\ch6_fs\\test\\myfinder.test.js",
        "passes": [
          {
            "title": "sync find",
            "fullTitle": "recursive finder sync find",
            "timedOut": false,
            "duration": 93,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-comment\">// this.timeout(mochaTimeOut);</span><br><span class=\"hljs-keyword\">var</span> results = myfinder.findSync(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir);<br><span class=\"hljs-comment\">// console.log(results);</span><br>results.should.be.an.Array;<br>results.should.not.be.empty;<br>results.length.should.be.above(<span class=\"hljs-number\">0</span>);<br>results.should.containEql(<span class=\"hljs-string\">'index.js'</span>);<br><span class=\"hljs-comment\">// results.should.containEql('nindex.js');</span>",
            "isRoot": false,
            "uuid": "8076157d-1227-4cf6-ad15-dea11ab7c581",
            "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
            "skipped": false
          }
        ],
        "failures": [
          {
            "title": "async find",
            "fullTitle": "recursive finder async find",
            "timedOut": true,
            "duration": 5003,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">this</span>.timeout(mochaTimeOut);<br>myfinder.find(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, results</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) {<br>        <span class=\"hljs-keyword\">return</span> err;<br>    }<br>    results.should.be.an.Array;<br>    results.should.not.be.empty;<br>    done();<br>});",
            "err": {
              "name": "Error",
              "message": "timeout of 5000ms exceeded. Ensure the done() callback is being called in this test.",
              "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">5000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
            },
            "isRoot": false,
            "uuid": "c74be9e7-4491-474b-9b79-515909cd1f9e",
            "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
            "skipped": false
          }
        ],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 1,
        "totalFailures": 1,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": true,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 5096
      },
      {
        "title": "locking => ",
        "suites": [],
        "tests": [
          {
            "title": "lock should be created",
            "fullTitle": "locking =>  lock should be created",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.locking.should.be.true;<br>    done();<br>});",
            "isRoot": false,
            "uuid": "d9ffca5b-4b6a-4737-8185-36568a541b97",
            "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
            "skipped": false
          },
          {
            "title": "lock should be removed",
            "fullTitle": "locking =>  lock should be removed",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.unlock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'lock released'</span>);<br>        done();<br>    });<br>});",
            "isRoot": false,
            "uuid": "0b9caf0c-6d8e-4829-bcab-0a54a3cdd7fe",
            "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "\\test\\mylock.test.js",
        "uuid": "22367b82-3496-494b-985f-b18a3d40e69b",
        "fullFile": "C:\\Users\\meng_\\Documents\\GitHub\\nodejs\\ch6_fs\\test\\mylock.test.js",
        "passes": [
          {
            "title": "lock should be created",
            "fullTitle": "locking =>  lock should be created",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.locking.should.be.true;<br>    done();<br>});",
            "isRoot": false,
            "uuid": "d9ffca5b-4b6a-4737-8185-36568a541b97",
            "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
            "skipped": false
          },
          {
            "title": "lock should be removed",
            "fullTitle": "locking =>  lock should be removed",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.unlock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'lock released'</span>);<br>        done();<br>    });<br>});",
            "isRoot": false,
            "uuid": "0b9caf0c-6d8e-4829-bcab-0a54a3cdd7fe",
            "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 9
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "591b12f4-00ab-4234-8b8f-278d840b4834",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "load",
      "fullTitle": "mydatabase load",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> testdb1 = <span class=\"hljs-keyword\">new</span> db(<span class=\"hljs-string\">'./test.db'</span>);<br>    testdb1.on(<span class=\"hljs-string\">'load'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        should(testdb._records).be.a.Object;<br>        done();<br>    });",
      "isRoot": false,
      "uuid": "bfb80201-7925-4892-b668-5e1f96711912",
      "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
      "skipped": false
    },
    {
      "title": "set",
      "fullTitle": "mydatabase set",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testdb.set(<span class=\"hljs-number\">1</span>, { <span class=\"hljs-string\">'name'</span>: <span class=\"hljs-string\">'sunmeng1'</span>, <span class=\"hljs-string\">'age'</span>: <span class=\"hljs-number\">20</span>, birthday: <span class=\"hljs-string\">'2010-10-10'</span> }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    testdb._records[<span class=\"hljs-number\">1</span>].should.be.a.Object;<br>    done();<br>});<br><span class=\"hljs-comment\">//<span class=\"hljs-doctag\">TODO:</span> !!! how to call done directly with multiple async call=</span><br><span class=\"hljs-comment\">// testdb.set(2, { 'name': 'sunmeng2', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(3, { 'name': 'sunmeng3', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(4, { 'name': 'sunmeng4', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(5, { 'name': 'sunmeng5', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(6, { 'name': 'sunmeng6', 'age': 20, birthday: '2010-10-10' });</span>",
      "isRoot": false,
      "uuid": "6de2f370-c1de-4ddf-bce5-4a10bc9947cd",
      "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
      "skipped": false
    },
    {
      "title": "delete",
      "fullTitle": "mydatabase delete",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testdb.delete(<span class=\"hljs-number\">6</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    should(testdb._records[<span class=\"hljs-number\">6</span>]).be.null;<br>    done();<br>});",
      "isRoot": false,
      "uuid": "3cde53cc-e2dc-44e6-954b-1ae6e003b61b",
      "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
      "skipped": false
    },
    {
      "title": "sync find",
      "fullTitle": "recursive finder sync find",
      "timedOut": false,
      "duration": 93,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// this.timeout(mochaTimeOut);</span><br><span class=\"hljs-keyword\">var</span> results = myfinder.findSync(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir);<br><span class=\"hljs-comment\">// console.log(results);</span><br>results.should.be.an.Array;<br>results.should.not.be.empty;<br>results.length.should.be.above(<span class=\"hljs-number\">0</span>);<br>results.should.containEql(<span class=\"hljs-string\">'index.js'</span>);<br><span class=\"hljs-comment\">// results.should.containEql('nindex.js');</span>",
      "isRoot": false,
      "uuid": "71123fee-c892-4b59-a00e-ba5d56b6cc8c",
      "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
      "skipped": false
    },
    {
      "title": "async find",
      "fullTitle": "recursive finder async find",
      "timedOut": true,
      "duration": 5003,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(mochaTimeOut);<br>myfinder.find(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, results</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) {<br>        <span class=\"hljs-keyword\">return</span> err;<br>    }<br>    results.should.be.an.Array;<br>    results.should.not.be.empty;<br>    done();<br>});",
      "err": {
        "name": "Error",
        "message": "timeout of 5000ms exceeded. Ensure the done() callback is being called in this test.",
        "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">5000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
      },
      "isRoot": false,
      "uuid": "ca7b660c-253d-448a-9f72-886eb1ec9aa8",
      "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
      "skipped": false
    },
    {
      "title": "lock should be created",
      "fullTitle": "locking =>  lock should be created",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.locking.should.be.true;<br>    done();<br>});",
      "isRoot": false,
      "uuid": "748d13c3-6b4c-4300-ac38-2c326cbdb3b4",
      "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
      "skipped": false
    },
    {
      "title": "lock should be removed",
      "fullTitle": "locking =>  lock should be removed",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.unlock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'lock released'</span>);<br>        done();<br>    });<br>});",
      "isRoot": false,
      "uuid": "f86594bf-754c-44e4-8307-0427b0fd257b",
      "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "load",
      "fullTitle": "mydatabase load",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> testdb1 = <span class=\"hljs-keyword\">new</span> db(<span class=\"hljs-string\">'./test.db'</span>);<br>    testdb1.on(<span class=\"hljs-string\">'load'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        should(testdb._records).be.a.Object;<br>        done();<br>    });",
      "isRoot": false,
      "uuid": "5198611a-c834-4a67-9129-9f693b35f585",
      "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
      "skipped": false
    },
    {
      "title": "set",
      "fullTitle": "mydatabase set",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testdb.set(<span class=\"hljs-number\">1</span>, { <span class=\"hljs-string\">'name'</span>: <span class=\"hljs-string\">'sunmeng1'</span>, <span class=\"hljs-string\">'age'</span>: <span class=\"hljs-number\">20</span>, birthday: <span class=\"hljs-string\">'2010-10-10'</span> }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    testdb._records[<span class=\"hljs-number\">1</span>].should.be.a.Object;<br>    done();<br>});<br><span class=\"hljs-comment\">//<span class=\"hljs-doctag\">TODO:</span> !!! how to call done directly with multiple async call=</span><br><span class=\"hljs-comment\">// testdb.set(2, { 'name': 'sunmeng2', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(3, { 'name': 'sunmeng3', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(4, { 'name': 'sunmeng4', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(5, { 'name': 'sunmeng5', 'age': 20, birthday: '2010-10-10' });</span><br><span class=\"hljs-comment\">// testdb.set(6, { 'name': 'sunmeng6', 'age': 20, birthday: '2010-10-10' });</span>",
      "isRoot": false,
      "uuid": "a271e25b-6552-4e92-8acd-df81ceac66f3",
      "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
      "skipped": false
    },
    {
      "title": "delete",
      "fullTitle": "mydatabase delete",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "testdb.delete(<span class=\"hljs-number\">6</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    should(testdb._records[<span class=\"hljs-number\">6</span>]).be.null;<br>    done();<br>});",
      "isRoot": false,
      "uuid": "730eaf1d-aeda-4fb0-9548-fd0ded39d530",
      "parentUUID": "fff5a687-8a4b-435b-bf6b-68e03ef3eb62",
      "skipped": false
    },
    {
      "title": "sync find",
      "fullTitle": "recursive finder sync find",
      "timedOut": false,
      "duration": 93,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// this.timeout(mochaTimeOut);</span><br><span class=\"hljs-keyword\">var</span> results = myfinder.findSync(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir);<br><span class=\"hljs-comment\">// console.log(results);</span><br>results.should.be.an.Array;<br>results.should.not.be.empty;<br>results.length.should.be.above(<span class=\"hljs-number\">0</span>);<br>results.should.containEql(<span class=\"hljs-string\">'index.js'</span>);<br><span class=\"hljs-comment\">// results.should.containEql('nindex.js');</span>",
      "isRoot": false,
      "uuid": "7b93ed9b-19b5-4395-8185-f35cebe759e1",
      "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
      "skipped": false
    },
    {
      "title": "lock should be created",
      "fullTitle": "locking =>  lock should be created",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.locking.should.be.true;<br>    done();<br>});",
      "isRoot": false,
      "uuid": "9ec72a88-840c-4032-8668-f05ca6c27f37",
      "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
      "skipped": false
    },
    {
      "title": "lock should be removed",
      "fullTitle": "locking =>  lock should be removed",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "mylock.lock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">throw</span> err;<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'get lock successfully'</span>);<br>    mylock.unlock(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'lock released'</span>);<br>        done();<br>    });<br>});",
      "isRoot": false,
      "uuid": "4741dc1e-7502-4635-9b08-1394464d1fd7",
      "parentUUID": "22367b82-3496-494b-985f-b18a3d40e69b",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "async find",
      "fullTitle": "recursive finder async find",
      "timedOut": true,
      "duration": 5003,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(mochaTimeOut);<br>myfinder.find(<span class=\"hljs-regexp\">/\\.js$/</span>, testDir, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, results</span>) </span>{<br>    <span class=\"hljs-keyword\">if</span> (err) {<br>        <span class=\"hljs-keyword\">return</span> err;<br>    }<br>    results.should.be.an.Array;<br>    results.should.not.be.empty;<br>    done();<br>});",
      "err": {
        "name": "Error",
        "message": "timeout of 5000ms exceeded. Ensure the done() callback is being called in this test.",
        "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">5000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
      },
      "isRoot": false,
      "uuid": "1db8146b-6f96-495b-ae8b-7abf2083887f",
      "parentUUID": "958e784b-d8c5-4543-9ac9-dc8db368ebf6",
      "skipped": false
    }
  ],
  "copyrightYear": 2016
}